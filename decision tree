import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier

HD=pd.read_csv("heart.csv")
HD=HD.drop_duplicates()
#remove outliers
Q1 = HD.quantile(0.25)
Q3 = HD.quantile(0.75)
IQR = Q3-Q1
data2 = HD[~((HD<(Q1-1.5*IQR))|(HD>(Q3+1.5*IQR))).any(axis=1)]

def Decisiontree_Classifier():

    categorical_columns = []
    for column in data2.columns:
        if len(data2[column].unique()) <= 10:
            categorical_columns.append(column)

    #print(categorical_columns)
    #create dummies values
    categorical_columns.remove('target')
    data_set = pd.get_dummies(data2, columns = categorical_columns)

    #using standardScaler for features which .get_dummies can't process in it 'continous cloumns.
    st_scaler= StandardScaler()
    scale_columns = ['age', 'trestbps', 'chol', 'thalach', 'oldpeak']
    data_set[scale_columns] = st_scaler.fit_transform(data_set[scale_columns])

    #cross validation train,test,split
    X= data2.drop('target', axis=1)
    Y = data2.target

    X_train, X_test, y_train, y_test = train_test_split(X,Y, test_size=0.2,random_state=0)

    tree_classifer = DecisionTreeClassifier(random_state=0)
    tree_classifer.fit(X_train, y_train)
    pred = tree_classifer.predict(X_test)
    print(f"Accuracy Score: {accuracy_score(y_test, pred) * 100:.2f}%")




Decisiontree_Classifier()
